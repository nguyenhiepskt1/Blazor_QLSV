@page "/monhocEdit/{MonHocID}"
@using QLSV.Model
@using QLSVWasm.Services
@using QLSVWasm.Components

@inject IMonHocApiClient MonHocApiClient ;
@inject NavigationManager NavigationManager;
@if (MonHoc == null)
{
    <Loading />
}
else
{
    <h3>Sửa môn học @MonHoc.TenMonHoc</h3>

    <EditForm Model="MonHoc" OnValidSubmit="SubmitMonHoc">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="TenMonHoc">Tên môn học</label>
            <InputText class="form-control" @bind-Value="MonHoc.TenMonHoc"></InputText>
            <ValidationMessage For="()=>MonHoc.TenMonHoc"></ValidationMessage>
            <small id="TenMonHocHelp" class="form-text text-muted">Hãy nhập tên môn học.</small>
        </div>
        <div class="form-group">
            <label for="SoTinChi">Số tín chỉ</label>
            <InputNumber class="form-control" @bind-Value="MonHoc.SoTinChi"></InputNumber>
            <ValidationMessage For="()=>MonHoc.SoTinChi"></ValidationMessage>
            <small id="SoTinChiHelp" class="form-text text-muted">Hãy nhập số tín chỉ.</small>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    [Parameter]
    public string MonHocID { get; set; }

    private MonHocUpdateRequest MonHoc;

    protected override async Task OnInitializedAsync()
    {
        var monhocDTO = await MonHocApiClient.GetMonHocDetail(MonHocID);
        MonHoc = new MonHocUpdateRequest();
        MonHoc.TenMonHoc = monhocDTO.TenMonHoc;
        MonHoc.SoTinChi = monhocDTO.SoTinChi;
    }

    private async Task SubmitMonHoc(EditContext context)
    {
        var result = await MonHocApiClient.UpdateMonHoc(Guid.Parse(MonHocID), MonHoc);
        if (result)
        {
            NavigationManager.NavigateTo("/monhoc");
        }
    }
}
